<!DOCTYPE html>
<html>
<head>
<meta http-equiv="content-type" content="text/html; charset=UTF-8">
        <meta charset="utf-8">
        <title>Jeu</title>
        <style media="screen and (min-width: 1000px)">
			body
			{
				height: 98vh;
				width: 98vw;
				font-size: 1vw;
				font-family: Verdana;
				overflow: hidden;
				-webkit-user-select: none; /* Safari */        
				-moz-user-select: none; /* Firefox */
				-ms-user-select: none; /* IE10+/Edge */
				user-select: none; /* Standard */
				background-image: url("double-bubble.png");
				background-repeat: x;
			}
			#main_box
			{
				width: 60%;
				margin-left: auto;
				margin-right: auto;
				margin-bottom: 1%;
				display: flex;
				height: 75%;
				

			}
			#plateau
			{
				width: 80%;
				border: 0.1vw solid grey;
				background-color: #c24f54;
				

				
			}
			.carte
			{
				border: 0.1vw solid black;
				text-align: center;
				background-color: #ffffff;
				color: #11323b;
				border-radius: 0.5vw;
				height: auto;
				width: 7.55vw;
				height: 12.89vw;
				word-wrap: normal;
			}
			.carte header h1, #question header h1
			{
				border-bottom: 0.1vw solid black;
				border-radius: 0.5vw;
				width: 100%;
				height: 10%;
				margin: 0%;
				font-size: 1vw;
				background-color: #6a9fab;
				color: white;
			}
			.carte .content
			{
				padding: 1%;
			}
			.vide
			{
				background-color: #e7e7e7;
				
			}
			.vide header h1 
			{
				background-color: #a3d5e0;
			}
			#top_plateau
			{
				width: 70%;
				margin-right: auto;
				margin-left: auto;
				margin: 1% auto;
				height: 38%;
				border-bottom: 0.1vw dotted black;

			}
			#question
			{
				width: auto;
				height: 75%;
				margin: auto;
				background-color: #184751;
				color: white;
				font-size: 1.2vw;
				border: 0.1vw solid black;
				text-align: center;
				border-radius: 0.5vw;
				word-wrap: normal;
			}
			#top_plateau span.balise
			{
				font-size: 2vw;
				color: rgb(255, 255, 0);
			}
			/*
			#top_plateau span.balise:hover
			{
				font-size: 3vw;
				color: yellow;
			}
			*/
			#bottom_plateau
			{
				display: flex;
				flex-wrap: wrap;
				margin: 3% auto;
				justify-content: center;
				align-items: center;
				width: 100%;
				height: 50%;
				
			}
			#bottom_plateau .carte
			{
				
				height: auto;
				margin-left: 2%;
				margin-right: 2%;
				width: 16%;
				height: 70%;

			}
			#score
			{
				width : 18%;
				border: 0.1vw solid grey;
				margin-left: 1%;	
				text-align: center;
				color: #11323b;
				background-color: #c24f54;

			}
			#score header
			{
				border-bottom: 0.1vw solid black;
			}
			#score #content
			{
				font-size: 0.8vw;
			}
			#score #content div:hover
			{
				color: white;
				border: 0.1vw dotted white;
				border-radius: 0.5vw;
				padding: 0%;
			}
			#score #content div:active
			{
				color: white;
				border: 0.1vw dotted white;
				border-radius: 0.5vw;
				padding: 0%;
			}
			#score #content p
			{
				margin: 2%;
			}
			#score p.vote
			{
				font-size: 0.7vw;
				margin: 0%;
			}
			#score #timer
			{
				color: white;
			}

			#main
			{
				display: flex;
				justify-content: center;
				flex-wrap: wrap;
				-ms-flex: 1; /* IE 10 */
				flex: 1;
				align-items: self-end;
				
			}
			#main .carte
			{
				margin-left: 0.08%;
				margin-right: 0.08%;
				height: 29vh;
				width: 8%
			}
		</style>
		<style media="screen and (max-width: 1000px)">
		
			body
			{
				height: 98vh;
				width: 98vw;
				font-size: 1.7vh;
				font-family: Verdana;
				overflow: hidden;
				-webkit-user-select: none; /* Safari */        
				-moz-user-select: none; /* Firefox */
				-ms-user-select: none; /* IE10+/Edge */
				user-select: none; /* Standard */
				background-image: url("double-bubble.png");
				background-repeat: x;

			}
			#main_box
			{
				width: 100%;
				margin-left: auto;
				margin-right: auto;
				margin-bottom: 1%;
				display: flex;
				height: 55%;
				

			}
			#plateau
			{
				width: 70%;
				border: 0.1vw solid grey;
				background-color: #c24f54;


				
			}
			.carte
			{
				border: 0.1vh solid black;
				text-align: center;
				background-color: #ffffff;
				color: #11323b;
				border-radius: 0.5vh;
				height: auto;
				width: 14.8vh;
				height: 11.9vh;
				word-wrap: normal;
				
			}

			.carte header h1, #question header h1
			{
				border-bottom: 0.1vw solid black;
				border-radius: 0.5vw;
				width: 100%;
				height: 10%;
				margin: 0%;
				font-size: 2vh;
				background-color: #6a9fab;
				color: white;
			}
			.carte .content
			{
				padding: 1%;
			}
			.vide
			{
				background-color: #e7e7e7;
				
			}
			.vide header h1 
			{
				background-color: #a3d5e0;
			}
			#top_plateau
			{
				width: 90%;
				margin-right: auto;
				margin-left: auto;
				margin: 1% auto;
				height: 50%;
				border-bottom: 0.1vh dotted black;

			}
			#question
			{
				width: auto;
				height: 100%;
				margin: auto;
				background-color: #184751;
				color: white;
				font-size: 2.5vh;
				border: 0.1vh solid black;
				text-align: center;
				border-radius: 0.5vh;
				word-wrap: normal;
			}
			#top_plateau span.balise
			{
				font-size: 4vh;
			}
			#bottom_plateau
			{
				display: flex;
				flex-wrap: wrap;

				justify-content: center;
				align-items: center;
				width: 100%;
				height: 40%;
				
			}
			#bottom_plateau .carte
			{
				
				height: auto;
				width: 45%;
				margin: 1%;
				height: 55%;
			}
			#score
			{
				width : 30%;
				border: 0.1vw solid grey;
				margin-left: 1%;	
				text-align: center;
				color: #11323b;
				background-color: #c24f54;

			}
			#score header
			{
				border-bottom: 0.1vh solid black;
				height: 7%;
			}
			#score header h1
			{
				color: white;
				font-size: 3vh;
				margin: 0px;
			}
			#score #content
			{
				font-size: 1.5vh;
			}
			#score #content div:hover
			{
				color: white;
				border: 0.1vh dotted white;
				border-radius: 0.5vh;
				padding: 0%;
			}
			#score #content div:active
			{
				color: white;
				border: 0.1vh dotted white;
				border-radius: 0.5vh;
				padding: 0%;
			}
			#score #content p
			{
				margin: 3%;
			}
			#score p.vote
			{
				font-size: 1.3vh;
				margin: 0px;
			}
			#score #timer
			{
				color: white;
			}

			#main
			{
				display: flex;
				justify-content: center;
				flex-wrap: wrap;
				-ms-flex: 1; /* IE 10 */
				flex: 1;
				align-items: self-end;
			}
			#main .content p
			{
				width: auto;
				height: auto;
				margin: 0%;
				padding: 0%;
				font-size: 1.7vh;
			}
			#main .carte
			{
				width: 30%;
				margin-left: 1%;
				margin-right: 1%;
				margin-bottom: 1%; 
				height: 14vh;
				
			}
		</style>
		<script src="https://ajax.googleapis.com/ajax/libs/jquery/3.3.1/jquery.min.js"></script>
	</head>
	
	
    <body>
		<div id="main_box">
	
			<div id="plateau">
				<div id="top_plateau">
					<div id="question">
						<header>
							<h1>Question</h1>
						</header>
						<p></p>
					</div>
				</div>
				<div id="bottom_plateau">
					<div id="carte_question" class="carte joue vide" style="visibility:collapse;">
						<header>
							<h1>Carte 1</h1>
						</header>
						<div class="content">
							<p>Placez une carte dans un trou.</p>
						</div>
					</div>
					
				</div>
					
			</div>
			
			<aside id="score">
				<header>
					<h1>Score</h1>
				</header>
				<div id="content">
					<div id="player_herroP">
						<p><strong>herroP</strong> : <span id="points_herroP">5</span> points</p>
						<p class="vote" id="vote_herroP"><span id="nbr_vote_herroP">1</span> vote</p>
					</div>
					<div id="player_herroZ">
						<p><strong>herroZ</strong> : <span id="points_herroZ">5</span> points</p>
						<p class="vote" id="vote_herroZ"><span id="nbr_vote_herroZ">1</span> vote</p>
					</div>
					<div id="player_herroB">
						<p><strong>herroB</strong> : <span id="points_herroB">5</span> points</p>
						<p class="vote" id="vote_herroB"><span id="nbr_vote_herroB">1</span> vote</p>
					</div>
					<div id="player_Magie">
						<p><strong>Magie</strong> : <span id="points_Magie">5</span> points</p>
						<p class="vote" id="vote_Magie"><span id="nbr_vote_Magie">1</span> vote</p>
					</div>
					<div id="player_TOM">
						<p><strong>TOM</strong> : <span id="points_TOM">5</span> points</p>
						<p class="vote" id="vote_TOM"><span id="nbr_vote_TOM">1</span> vote</p>
					</div>
					<div id="player_TEX">
						<p><strong>TEX</strong> : <span id="points_TEX">5</span> points</p>
						<p class="vote" id="vote_TEX"><span id="nbr_vote_TEX">1</span> vote</p>
					</div>
				</div>
				<p><span id="timer">59s</span></p>
				<button id="btn" onclick="sendCards()">Click</button>

			</aside>
		</div>
		
		<div id="main">
				<div class="carte" style='visibility:collapse'>
					<header>
						<h1>herroP</h1>
					</header>
					<div class="content">
						<p>Un autocollant "enfants à bord".</p>
					</div>
				</div>
					
					

		</div>
		
		<script>
			mode=undefined;
			dragObj=undefined;
			oldObj=undefined;
			balise=undefined;
			player = {name:"test"};
			const url = "http://localhost:3000/";
			
			if (window.matchMedia('(min-width: 1000px)')) {
				size = ["1.2vw","1.3vw","2vw","2.1vw"];
			} else if (window.matchMedia('(max-width: 1000px)')) {
				console.log("ouais");
				size = ["1.7vh","1.8vh","2.5vh","2.6vh"];
			}
			playerName="herroP";
			for (var obj of document.querySelectorAll(".carte:not(.joue)")) {
				obj.addEventListener('mousedown', initDnD);
			}

			document.addEventListener('mousemove', DnDMove);
			document.addEventListener("touchend", endDnD);
			initQuestion("J'ai toujours donné des petits noms à mes sextoys, celui-là s'appelle □ et □.");
			
			
			function initQuestion(question) {
				count=0;
				while (question.search(/(?!>)□(?!<)/) > -1 ) {
					question = question.replace(/(?!>)□(?!<)/,"<span class='balise' id='balise"+count.toString()+"'>□</span>");
					newCarte=document.getElementById("carte_question").cloneNode(true);
					newCarte.id="carte"+count.toString();
					newCarte.style.visibility="visible";
					newCarte.querySelector("h1").innerHTML="Carte "+(count+1).toString();
					document.getElementById("bottom_plateau").appendChild(newCarte);
					count+=1;
				}
				document.getElementById("question").children[1].innerHTML = question;
			}
			
			function getText(obj) {
				if (obj.textContent) { // « textContent » existe ? Alors on s'en sert !
						txt = obj.textContent;
				} else if (obj.innerText) { // « innerText » existe ? Alors on doit être sous IE.
					txt = obj.innerText + ' [via Internet Explorer]';
				} else { // Si aucun des deux n'existe, cela est sûrement dû au fait qu'il n'y a pas de texte
					txt = ''; // On met une chaîne de caractères vide
				}
				return txt;
			}

			function initDnD(e) {
				if (mode!="VOTE") {
					var x = e.currentTarget.offsetLeft;
					var y = e.currentTarget.offsetTop;
					dragObj=e.currentTarget.cloneNode(true);
					e.currentTarget.style.visibility = "hidden"; 
					oldObj=e.currentTarget;
					dragObj.style.position="absolute";
					dragObj.style.left=String(x)+"px";
					dragObj.style.top=String(y)+"px";
					document.body.addEventListener('mouseup', endDnD);
					document.body.appendChild(dragObj);
					
				}
			}



			function DnDMove(e) {
				if (dragObj != undefined) {
					dragObj.style.left=String(e.clientX)+"px";
					dragObj.style.top=String(e.clientY)+"px";
				}
				var x = e.clientX, y = e.clientY;
				var width  = window.innerWidth || document.documentElement.clientWidth || document.body.clientWidth;
				var height = window.innerHeight|| document.documentElement.clientHeight|| document.body.clientHeight;
				if (!(x>width || y>height || x<0 || y<0)) { //si on est toujours dans la fenêtre
					var el=document.elementFromPoint(x,y);
					baliseHover(el); //si on entre sur la balise, 
				}
				else { //cas où on sort de la fenêtre 
					endDnD(e);
				}
				
			}


			function baliseHover(el, force = false) {
				if (el.innerText=="□" || (balise && balise.innerText=="□")) { //On gère le hover lorsque les balises sont vides
					if (balise && el.id != balise.id){ //cas où on sort de la balise 
						if (balise.innerText != "□") { balise.style.fontSize = size[0]; } else {balise.style.fontSize = size[2];} //cas particulier où l'on vient d'une balise non vide
						if (el.className=="balise") { //si on réentre dans l'autre balise. 
							balise = el;
							baliseHover(el);
							return
						 }
						 else {
							balise = undefined;
						 }
					}
					else if (!balise && el.className=="balise") { //cas où on entre dans une balise 
						balise = el;
						balise.style.fontSize = size[3];	
					}
					
					
				}
				else if (balise && el.className=="balise" && balise.id  != el.id){ //cas où on sort d'une balise pour entrer dans une autre
					balise.style.color="white";
					balise.style.fontSize = size[0];
					balise = undefined;
					baliseHover(el);
					}
				else if (el.className=="balise" && force == false) { //si l'élémnt parcouru est une balise et que force est faux
					balise = el;
					if (getComputedStyle(balise).color != "rgb(255, 255, 0)") { //si on est pas déjà entré sur l'objet
						balise.style.color="rgb(255, 255, 0)";
						balise.style.fontSize = size[1];
					}
				}
				else if (balise && getComputedStyle(balise).color == "rgb(255, 255, 0)") { //deux cas : fin du DnD & la balise identifiée est jaune 																							//OU sortie de la balise
					balise.style.color="white";
					if (force == false) {balise.style.fontSize = size[0];} //cas où on termine le DnD
					balise = undefined;
				}
			}

			function insertCard(balise,card) {
				if (balise.innerHTML!="□") {
					addCard(balise.innerHTML);
				}
				else {
					balise.style.backgroundColor="#6a9fab";
				}
				balise.innerHTML=card.querySelector("p").innerHTML.toLowerCase();
				balise.style.fontSize=getComputedStyle(balise.parentNode).fontSize;
				balise.addEventListener("mousedown",removeCard);
				id="carte"+balise.id.slice(-1);
				document.getElementById(id).className="carte";
				document.getElementById(id).querySelector("p").innerHTML=card.querySelector("p").innerHTML;
				player.cards_played[parseInt(id.slice(-1))]=card.querySelector("p").innerHTML;
				
			}
			function addCard(text) {
				new_card=document.getElementById("main").children[0].cloneNode(true);
				text=text.charAt(0).toUpperCase() + text.slice(1);
				new_card.querySelector("p").innerHTML=text;
				new_card.querySelector("h1").innerHTML=playerName;
				new_card.style.visibility="visible";
				document.getElementById("main").appendChild(new_card);
				new_card.addEventListener('mousedown', initDnD);
			}
			function removeCard(e) {
				if (balise && balise.innerText!="□" && mode != "VOTE") { 
					carte=document.getElementById("carte"+balise.id.slice(-1));
					carte.querySelector("p").innerText="Placez une carte dans un trou.";
					carte.className="carte joue vide";
					addCard(balise.innerText);
					balise.innerText="□";
					balise.style.fontSize=size[2];
					balise.style.backgroundColor="transparent";
					player.cards_played[parseInt(balise.id.slice(-1))]=undefined;

				}				
			}
			
			function deleteCards() {
				let main =  document.getElementById("main");
				while (main.children.length > 1) {
					main.removeChild(main.lastChild);
				}
			}
			
			function endDnD(e) {
				
				if (mode!="VOTE" && dragObj != undefined) {
					oldObj.style.visibility = "visible";
					if (balise) {
						insertCard(balise,oldObj);
						oldObj.parentNode.removeChild(oldObj);
						document.body.removeChild(dragObj);
						document.body.removeEventListener('mouseup', endDnD);
						dragObj=undefined;
						baliseHover(balise,true);
						return;
					}
						
					

					document.body.removeChild(dragObj);
					document.body.removeEventListener('mouseup', endDnD);
					dragObj=undefined;
				}
				
			}

			function touchHandler(event) {
				var touch = event.changedTouches[0];
				var simulatedEvent = document.createEvent("MouseEvent");
					simulatedEvent.initMouseEvent({
					touchstart: "mousedown",
					touchmove: "mousemove",
					touchend: "mouseup"
				}[event.type], true, true, window, 1,
					touch.screenX, touch.screenY,
					touch.clientX, touch.clientY, false,
					false, false, false, 0, null);
				touch.target.dispatchEvent(simulatedEvent);
			}
			
			function get(type="",) {
				$.get("http://localhost:3000/"+type, function (data, status){
					console.log(typeof(data));
					});
			}

			
			function register(pseudo) {

				$.post(url+"register_player",{name:pseudo}, function (data, status){
							if (status == "success") {
								player = data;
								for (card in player.cards) {
									addCard(player.cards[card]);
								}
							}
							
					});
						
			}
			
			function sendCards() {
				$.post(url+"send_cards",{id:player.id,password:player.password,cards_played:player.cards_played}, function (data, status){
						if (status == "success") {
							mode = "VOTE";
							player = data;
							deleteCards();
							for (card in player.cards) {
									addCard(player.cards[card]);
								}
								
						}		
				});
			}
		

			function getTest() {
				console.log(player);
			}
			
			register("herroP");

			document.addEventListener("touchstart", touchHandler);
			document.addEventListener("touchmove", touchHandler);

		


		</script> 
		

</body></html>